@page "/contato"

<PageTitle>Contato</PageTitle>

<div class="d-flex flex-column justify-content-center align-items-center">

<h1>Contato</h1>

<h2>Me mande uma mensagem</h2>

<form class="d-flex flex-column w-100" @onsubmit="EnviarMensagem">
        <input class="form-control mt-3" @bind="nome" @bind:event="oninput" placeholder="Nome" />
        <input class="form-control mt-3" @bind="email" @bind:event="oninput" placeholder="Email" type="email" />
        <textarea class="form-control mt-3" @bind="mensagem" @bind:event="oninput" placeholder="Digite sua mensagem" rows="5"></textarea>

        <button class="btn btn-primary mt-3" type="submit">Enviar</button>
</form>

@if (!string.IsNullOrEmpty(confirmacao))
{
    <p style="color: green;">@confirmacao</p>
}

</div>

@code {
    [Parameter]
    public string? nome { get; set; }
    [Parameter]
    public string? email { get; set; }
    [Parameter]
    public string? mensagem { get; set; }
    private string? confirmacao { get; set; }

    private async Task EnviarMensagem()
    {
        // Mostra a confirmação
        confirmacao = $"Obrigado, {nome}! Sua mensagem foi enviada com sucesso.";

        // Limpa os campos
        nome = string.Empty;
        email = string.Empty;
        mensagem = string.Empty;

        // Aguarda 10 segundos e some com a mensagem
        await Task.Delay(5000);
        confirmacao = null;

        // Atualiza a interface
        StateHasChanged();
    }
}
